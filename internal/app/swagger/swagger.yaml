basePath: /
definitions:
  schema.Demo:
    properties:
      code:
        description: 编号
        type: string
      created_at:
        description: 创建时间
        type: string
      creator:
        description: 创建者
        type: string
      id:
        description: 唯一标识
        type: string
      memo:
        description: 备注
        type: string
      name:
        description: 名称
        type: string
      status:
        description: 状态(1:启用 2:停用)
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - code
    - name
    - status
    type: object
  schema.ErrorItem:
    properties:
      code:
        description: 错误码
        type: integer
      message:
        description: 错误信息
        type: string
    type: object
  schema.ErrorResult:
    properties:
      error:
        $ref: '#/definitions/schema.ErrorItem'
        description: 错误项
        type: object
    type: object
  schema.IDResult:
    properties:
      id:
        type: string
    type: object
  schema.LoginCaptcha:
    properties:
      captcha_id:
        description: 验证码ID
        type: string
    type: object
  schema.LoginParam:
    properties:
      captcha_code:
        description: 验证码
        type: string
      captcha_id:
        description: 验证码ID
        type: string
      password:
        description: 密码(md5加密)
        type: string
      user_name:
        description: 用户名
        type: string
    required:
    - captcha_code
    - captcha_id
    - password
    - user_name
    type: object
  schema.LoginTokenInfo:
    properties:
      access_token:
        description: 访问令牌
        type: string
      expires_at:
        description: 令牌到期时间戳
        type: integer
      token_type:
        description: 令牌类型
        type: string
    type: object
  schema.Menu:
    properties:
      component:
        description: 组件
        type: string
      created_at:
        description: 创建时间
        type: string
      creator:
        description: 创建者
        type: string
      icon:
        description: 菜单图标
        type: string
      id:
        description: 唯一标识
        type: string
      level:
        description: 路由层级
        type: integer
      memo:
        description: 备注
        type: string
      method:
        description: 按钮类型(其实是HTTP的方法,GET,POST,PUT,DELETE等)
        type: string
      name:
        description: 菜单名称
        type: string
      parent_id:
        description: 父级ID
        type: string
      parent_path:
        description: 父级路径
        type: string
      path:
        description: 访问路由
        type: string
      sequence:
        description: 排序值
        type: integer
      show_status:
        description: 显示状态(1:显示 2:隐藏)
        type: integer
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
      title:
        description: 菜单名称(显示)
        type: string
      updated_at:
        description: 更新时间
        type: string
    required:
    - name
    - show_status
    - status
    - title
    type: object
  schema.MenuTree:
    properties:
      children:
        description: 子级树
        items:
          $ref: '#/definitions/schema.MenuTree'
        type: array
      component:
        description: 组件
        type: string
      icon:
        description: 菜单图标
        type: string
      id:
        description: 唯一标识
        type: string
      level:
        description: 路由层级
        type: integer
      method:
        description: 按钮类型
        type: string
      name:
        description: 菜单名称
        type: string
      parent_id:
        description: 父级ID
        type: string
      parent_path:
        description: 父级路径
        type: string
      path:
        description: 访问路由
        type: string
      sequence:
        description: 排序值
        type: integer
      show_status:
        description: 显示状态(1:显示 2:隐藏)
        type: integer
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
      title:
        description: 菜单名称（显示)
        type: string
    type: object
  schema.Role:
    properties:
      created_at:
        description: 创建时间
        type: string
      creator:
        description: 创建者
        type: string
      id:
        description: 唯一标识
        type: string
      memo:
        description: 备注
        type: string
      name:
        description: 角色名称
        type: string
      role_menus:
        $ref: '#/definitions/schema.RoleMenus'
        description: 角色菜单列表
        type: object
      sequence:
        description: 排序值
        type: integer
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - name
    - status
    type: object
  schema.RoleMenu:
    properties:
      id:
        description: 唯一标识
        type: string
      menu_id:
        description: 菜单ID
        type: string
      role_id:
        description: 角色ID
        type: string
    required:
    - menu_id
    - role_id
    type: object
  schema.RoleMenus:
    items:
      $ref: '#/definitions/schema.RoleMenu'
    type: array
  schema.Roles:
    items:
      $ref: '#/definitions/schema.Role'
    type: array
  schema.StatusResult:
    properties:
      status:
        description: 状态(OK)
        type: string
    type: object
  schema.UpdatePasswordParam:
    properties:
      new_password:
        description: 新密码(md5加密)
        type: string
      old_password:
        description: 旧密码(md5加密)
        type: string
    required:
    - new_password
    - old_password
    type: object
  schema.User:
    properties:
      avatar:
        type: string
      created_at:
        description: 创建时间
        type: string
      creator:
        description: 创建者
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 唯一标识
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      real_name:
        description: 真实姓名
        type: string
      status:
        description: 用户状态(0:启用 1:停用)
        type: integer
      type:
        description: 用户状态(0:普通用户 1:管理员)
        type: integer
      user_name:
        description: 用户名
        type: string
      user_roles:
        $ref: '#/definitions/schema.UserRoles'
        description: 角色授权
        type: object
    required:
    - real_name
    - user_name
    - user_roles
    type: object
  schema.UserLoginInfo:
    properties:
      real_name:
        description: 真实姓名
        type: string
      roles:
        $ref: '#/definitions/schema.Roles'
        description: 角色列表
        type: object
      user_id:
        description: 用户ID
        type: string
      user_name:
        description: 用户名
        type: string
    type: object
  schema.UserRole:
    properties:
      id:
        description: 唯一标识
        type: string
      role_id:
        description: 角色ID
        type: string
      user_id:
        description: 用户ID
        type: string
    type: object
  schema.UserRoles:
    items:
      $ref: '#/definitions/schema.UserRole'
    type: array
  schema.UserShow:
    properties:
      avatar:
        type: string
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 唯一标识
        type: string
      phone:
        description: 手机号
        type: string
      real_name:
        description: 真实姓名
        type: string
      roles:
        description: 授权角色列表
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      status:
        description: 用户状态(1:启用 2:停用)
        type: integer
      type:
        description: 用户状态(0:普通用户 1:管理员)
        type: integer
      user_name:
        description: 用户名
        type: string
    type: object
info:
  contact:
    email: tiannianshou@gmail.com
    name: LyricTian
  description: RBAC scaffolding based on GIN + GORM/MONGO + CASBIN + WIRE.
  license: {}
  title: zback
  version: 6.3.1
paths: {}
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
